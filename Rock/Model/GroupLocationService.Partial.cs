//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//
// THIS WORK IS LICENSED UNDER A CREATIVE COMMONS ATTRIBUTION-NONCOMMERCIAL-
// SHAREALIKE 3.0 UNPORTED LICENSE:
// http://creativecommons.org/licenses/by-nc-sa/3.0/
//
using System.Collections.Generic;
using System.Linq;

namespace Rock.Model
{
    /// <summary>
    /// GroupLocation Service class
    /// </summary>
    public partial class GroupLocationService
    {
        /// <summary>
        /// Gets Grouplocations by location.
        /// </summary>
        /// <param name="locationId">The location id.</param>
        /// <returns></returns>
        public IEnumerable<GroupLocation> GetByLocation( int locationId )
        {
            return Repository.Find( g => g.LocationId == locationId );
        }

        /// <summary>
        /// Gets Grouplocations by location.
        /// </summary>
        /// <param name="locationId">The location id.</param>
        /// <returns></returns>
        public IEnumerable<GroupLocation> GetActiveByLocation( int locationId )
        {
            return Repository.AsQueryable()
                .Where( g =>
                    g.LocationId == locationId &&
                    g.Group.IsActive ).ToList();

        }

    }
}

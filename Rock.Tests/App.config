<?xml version="1.0"?>
<configuration>
    <appSettings>
        <clear/>
        <add key="AttributeRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.Attribute,Rock]],Rock.Tests"/>
        <add key="AttributeQualifierRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.AttributeQualifier,Rock]],Rock.Tests"/>
        <add key="AttributeValueRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.AttributeValue,Rock]],Rock.Tests"/>
        <add key="AuditRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.Audit,Rock]],Rock.Tests"/>
        <add key="AuthRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.Auth,Rock]],Rock.Tests"/>
        <add key="BinaryFileRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.BinaryFile,Rock]],Rock.Tests"/>
        <add key="BlockRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.Block,Rock]],Rock.Tests"/>
        <add key="BlockTypeRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.BlockType,Rock]],Rock.Tests"/>
        <add key="CampusRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.Campus,Rock]],Rock.Tests"/>
        <add key="CategoryRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.Category,Rock]],Rock.Tests"/>
        <add key="DefinedTypeRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.DefinedType,Rock]],Rock.Tests"/>
        <add key="DefinedValueRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.DefinedValue,Rock]],Rock.Tests"/>
        <add key="EmailTemplateRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.EmailTemplate,Rock]],Rock.Tests"/>
        <add key="EntityChangeRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.EntityChange,Rock]],Rock.Tests"/>
        <add key="EntityTypeRepositoryType" value="Rock.Tests.Fakes.FakeEntityTypeRepository,Rock.Tests"/>
        <add key="ExceptionLogRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.ExceptionLog,Rock]],Rock.Tests"/>
        <add key="FieldTypeRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.FieldType,Rock]],Rock.Tests"/>
        <add key="FinancialBatchRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.FinancialBatch,Rock]],Rock.Tests"/>
        <add key="FinancialTransactionRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.FinancialTransaction,Rock]],Rock.Tests"/>
        <add key="FinancialTransactionDetailRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.FinancialTransactionDetail,Rock]],Rock.Tests"/>
        <add key="FinancialTransactionFundRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.FinancialTransactionFund,Rock]],Rock.Tests"/>
        <add key="FundRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.Fund,Rock]],Rock.Tests"/>
        <add key="GroupRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.Group,Rock]],Rock.Tests"/>
        <add key="GroupLocationRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.GroupLocation,Rock]],Rock.Tests"/>
        <add key="GroupMemberRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.GroupMember,Rock]],Rock.Tests"/>
        <add key="GroupRoleRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.GroupRole,Rock]],Rock.Tests"/>
        <add key="GroupTypeRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.GroupType,Rock]],Rock.Tests"/>
        <add key="HtmlContentRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.HtmlContent,Rock]],Rock.Tests"/>
        <add key="LocationRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.Location,Rock]],Rock.Tests"/>
        <add key="MarketingCampaignRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.MarketingCampaign,Rock]],Rock.Tests"/>
        <add key="MarketingCampaignAdRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.MarketingCampaignAd,Rock]],Rock.Tests"/>
        <add key="MarketingCampaignAdTypeRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.MarketingCampaignAdType,Rock]],Rock.Tests"/>
        <add key="MarketingCampaignAudienceRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.MarketingCampaignAudience,Rock]],Rock.Tests"/>
        <add key="MarketingCampaignCampusRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.MarketingCampaignCampus,Rock]],Rock.Tests"/>
        <add key="MetricRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.Metric,Rock]],Rock.Tests"/>
        <add key="MetricValueRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.MetricValue,Rock]],Rock.Tests"/>
        <add key="PageRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.Page,Rock]],Rock.Tests"/>
        <add key="PageContextRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.PageContext,Rock]],Rock.Tests"/>
        <add key="PageRouteRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.PageRoute,Rock]],Rock.Tests"/>
        <add key="PaymentGatewayRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.PaymentGateway,Rock]],Rock.Tests"/>
        <add key="PersonRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.Person,Rock]],Rock.Tests"/>
        <add key="PersonAccountLookupRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.PersonAccountLookup,Rock]],Rock.Tests"/>
        <add key="PersonMergedRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.PersonMerged,Rock]],Rock.Tests"/>
        <add key="PersonViewedRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.PersonViewed,Rock]],Rock.Tests"/>
        <add key="PhoneNumberRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.PhoneNumber,Rock]],Rock.Tests"/>
        <add key="PledgeRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.Pledge,Rock]],Rock.Tests"/>
        <add key="ServiceJobRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.ServiceJob,Rock]],Rock.Tests"/>
        <add key="ServiceLogRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.ServiceLog,Rock]],Rock.Tests"/>
        <add key="SiteRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.Site,Rock]],Rock.Tests"/>
        <add key="SiteDomainRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.SiteDomain,Rock]],Rock.Tests"/>
        <add key="TagRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.Tag,Rock]],Rock.Tests"/>
        <add key="TaggedItemRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.TaggedItem,Rock]],Rock.Tests"/>
        <add key="UserLoginRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.UserLogin,Rock]],Rock.Tests"/>
        <add key="WorkflowRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.Workflow,Rock]],Rock.Tests"/>
        <add key="WorkflowActionRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.WorkflowAction,Rock]],Rock.Tests"/>
        <add key="WorkflowActionTypeRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.WorkflowActionType,Rock]],Rock.Tests"/>
        <add key="WorkflowActivityRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.WorkflowActivity,Rock]],Rock.Tests"/>
        <add key="WorkflowActivityTypeRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.WorkflowActivityType,Rock]],Rock.Tests"/>
        <add key="WorkflowLogRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.WorkflowLog,Rock]],Rock.Tests"/>
        <add key="WorkflowTriggerRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.WorkflowTrigger,Rock]],Rock.Tests"/>
        <add key="WorkflowTypeRepositoryType" value="Rock.Tests.Fakes.FakeRepository`1[[Rock.Model.WorkflowType,Rock]],Rock.Tests"/>
    </appSettings>
    <startup>
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5"/>
    </startup>
</configuration>
